{"version":3,"sources":["components/constants/Breakpoints.js","fonts/Inconsolata.woff","fonts/Inconsolata.woff2","components/constants/GlobalStyle.js","utils/utils.js","utils/WebAPI.js","slices/posts.js","components/Post.jsx","components/Loading.jsx","components/Pagination.jsx","pages/Home/Home.jsx","slices/user.js","pages/Archive/Archive.jsx","slices/post.js","slices/editor.js","pages/SinglePost/SinglePost.jsx","components/Editor.jsx","pages/NewPost/NewPost.jsx","pages/EditPost/EditPost.jsx","pages/About/About.jsx","pages/Login/Login.jsx","components/Header.jsx","components/Footer.jsx","SiteRouter.jsx","App.jsx","slices/index.js","index.js"],"names":["MEDIA_QUERY_S","GlobalStyle","createGlobalStyle","InconsolataWoff","InconsolataWoff2","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","API_URL","getPostsFromAPI","page","a","fetch","responseData","json","jsonData","result","posts","totalPosts","Number","headers","get","getSinglePostFromAPI","id","getMeFromAPI","authorization","loginAPI","username","password","method","body","JSON","stringify","sendPostAPI","title","updatePostAPI","deletePostAPI","postsSlice","createSlice","name","initialState","currentPage","isLoading","hasErrors","reducers","getPosts","state","getPostsSuccess","action","payload","getPostsFailure","actions","postsSelector","fetchPosts","dispatch","CodeBlock","language","value","style","tomorrow","showLineNumbers","customStyle","maxWidth","PostWrapper","styled","div","PostCreatedAt","p","PostTitle","h2","props","$singlePost","EditPost","Link","DeletePost","ReadMore","Markdown","ReactMarkdown","Post","post","userId","user","excerpt","archive","handleDeletePost","createdAt","Date","toLocaleString","split","to","onClick","window","confirm","renderers","code","length","substring","LoadingText","LoadingDots","Loading","PaginationWrapper","PaginationItem","$active","Pagination","handlePagination","totalPages","Math","ceil","pagesArray","i","push","map","pageNumber","Home","useDispatch","useSelector","useLayoutEffect","userSlice","getMe","getMeSuccess","data","getMeFailure","login","loginSuccess","loginFailure","userSelector","loginRequest","fetchMe","Archive","postSlice","errorMessage","getPost","getPostSuccess","getPostFailure","clearPost","postSelector","fetchSinglePost","errorData","editorSlice","postResponse","editOperation","editPostSuccess","editPostFailure","deletePostSuccess","deletePostFailure","clearPostResponse","editorSelector","editor","sendPostRequest","deletePostRequest","SinglePost","useParams","history","useHistory","EditorTitle","input","EditorBody","textarea","Editor","useEffect","console","log","useState","postTitle","postBody","inputs","setInputs","handleChange","event","target","handleSubmit","preventDefault","onSubmit","type","placeholder","onChange","NewPost","AboutSection","section","AboutTitle","h1","AboutContent","About","Login","HeaderWrapper","HeaderBody","header","Icon","NavItem","NavItemHidden","Header","location","useLocation","pathname","go","FooterWrapper","FooterBody","footer","InfoSection","FooterText","CCIcon","img","SocialSection","SocialIcon","Footer","src","href","SiteRouter","exact","path","App","rootReducer","combineReducers","postsReducer","postReducer","userReducer","editorReducer","store","configureStore","reducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf299406.chunk.js","sourcesContent":["export const MEDIA_QUERY_S = \"@media screen and (min-width: 576px)\";\nexport const MEDIA_QUERY_M = \"@media screen and (min-width: 768px)\";\nexport const MEDIA_QUERY_L = \"@media screen and (min-width: 1280px)\";\n","export default __webpack_public_path__ + \"static/media/Inconsolata.3841494d.woff\";","export default __webpack_public_path__ + \"static/media/Inconsolata.e73ec33c.woff2\";","import { createGlobalStyle } from \"styled-components\";\n\nimport { MEDIA_QUERY_S } from \"./Breakpoints\";\n\nimport InconsolataWoff from '../../fonts/Inconsolata.woff';\nimport InconsolataWoff2 from '../../fonts/Inconsolata.woff2';\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'Inconsolata';\n    src: local('Inconsolata'),\n      url(${InconsolataWoff}) format('woff'),\n      url(${InconsolataWoff2}) format('woff2'),\n      font-weight: 300;\n      font-style: normal;\n  }\n\n  * {\n    font-family: 'Inconsolata', monospace;\n    margin: 0;\n    box-sizing: border-box;\n    text-align: center;\n    font-size: 16px;\n    overflow-wrap: break-word;\n    ${MEDIA_QUERY_S} {\n      font-size: 20px;\n    }\n  }\n  li {\n    list-style-type: none;\n  }\n  main {\n    position: relative;\n    margin: auto;\n    top: 76px;\n    min-height: 500px;\n    max-width: 1080px;\n    min-height: calc(100vh - 76px - 38px);\n    width: 100%;\n    padding: 25px;\n  }\n  a {\n    text-decoration: none;\n    color: #222;\n  }\n  input {\n    text-align: left;\n    margin: 15px;\n  }\n  h1 {\n    font-size: 28px;\n    ${MEDIA_QUERY_S} {\n      font-size: 32px;\n    }\n  }\n  h2 {\n    margin: 10px 0 25px;\n    padding: 5px;\n    text-align: left;\n    font-size: 24px;\n    ${MEDIA_QUERY_S} {\n      font-size: 28px;\n    }\n  }\n`;\n\nexport default GlobalStyle;\n","const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => localStorage.setItem(TOKEN_NAME, token);\n\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME);\n","import { getAuthToken } from \"./utils\";\n\nconst API_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPostsFromAPI = async (page) => {\n  let responseData;\n  if (page) {\n    responseData = await fetch(\n      `${API_URL}/posts?_sort=createdAt&_order=desc&_limit=5&_page=${page}`\n    );\n  } else {\n    responseData = await fetch(`${API_URL}/posts?_sort=createdAt&_order=desc`);\n  }\n  const jsonData = await responseData.json();\n  const result = {\n    posts: jsonData,\n    totalPosts: Number(responseData.headers.get(\"x-total-count\")),\n    page: page,\n  };\n  return result;\n};\n\nexport const getSinglePostFromAPI = async (id) => {\n  const responseData = await fetch(`${API_URL}/posts?id=${id}`);\n  const jsonData = await responseData.json();\n  return jsonData[0];\n};\n\nexport const getMeFromAPI = async () => {\n  const token = getAuthToken();\n  const responseData = await fetch(`${API_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  });\n  const jsonData = await responseData.json();\n  return jsonData;\n};\n\nexport const loginAPI = async (username, password) => {\n  const responseData = await fetch(`${API_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  });\n  const jsonData = await responseData.json();\n  return jsonData;\n};\n\nexport const sendPostAPI = async (title, body) => {\n  const token = getAuthToken();\n  const responseData = await fetch(`${API_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  });\n  const jsonData = await responseData.json();\n  return jsonData;\n};\n\nexport const updatePostAPI = async (title, body, id) => {\n  const token = getAuthToken();\n  const responseData = await fetch(`${API_URL}/posts/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  });\n  const jsonData = await responseData.json();\n  return jsonData;\n};\n\nexport const deletePostAPI = async (id) => {\n  const responseData = await fetch(`${API_URL}/posts/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  });\n  const jsonData = await responseData.json();\n  return jsonData;\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getPostsFromAPI } from \"../utils/WebAPI\";\n\nexport const initialState = {\n  posts: [],\n  totalPosts: 0,\n  currentPage: 1,\n  isLoading: false,\n  hasErrors: false,\n};\n\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  reducers: {\n    getPosts: (state) => {\n      state.isLoading = true;\n    },\n    getPostsSuccess: (state, action) => {\n      state.posts = action.payload.posts;\n      state.currentPage = action.payload.page;\n      state.totalPosts = action.payload.totalPosts;\n      state.isLoading = false;\n      state.hasErrors = false;\n    },\n    getPostsFailure: (state) => {\n      state.isLoading = false;\n      state.hasErrors = true;\n    },\n  },\n});\n\nexport const {\n  getPosts,\n  getPostsSuccess,\n  getPostsFailure,\n} = postsSlice.actions;\nexport const postsSelector = (state) => state.posts;\nexport default postsSlice.reducer;\n\nexport const fetchPosts = (page) => {\n  return async (dispatch) => {\n    dispatch(getPosts());\n\n    try {\n      const responseData = await getPostsFromAPI(page);\n\n      dispatch(getPostsSuccess(responseData));\n    } catch (error) {\n      dispatch(getPostsFailure());\n    }\n  };\n};\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { tomorrow } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { MEDIA_QUERY_S } from \"./constants/Breakpoints\";\n\nconst CodeBlock = ({ language, value }) => {\n  return (\n    <SyntaxHighlighter\n      language={language}\n      style={tomorrow}\n      showLineNumbers={true}\n      customStyle={{\n        maxWidth: \"80vw\",\n      }}\n    >\n      {value || \"\"}\n    </SyntaxHighlighter>\n  );\n};\n\nconst PostWrapper = styled.div`\n  text-align: left;\n  padding-bottom: 20px;\n  border-bottom: 1px solid #cacdcc;\n\n  ${MEDIA_QUERY_S} {\n    margin: 30px 70px 20px;\n  }\n`;\n\nconst PostCreatedAt = styled.p`\n  margin: 0;\n  color: #abacad;\n  text-align: left;\n`;\n\nconst PostTitle = styled.h2`\n  transition: all ease-in-out 0.5s;\n  overflow-wrap: break-word;\n  ${(props) =>\n    props.$singlePost !== true &&\n    `\n      :hover {\n        color: #fff;\n        background: #aaacaf;\n      }\n    `\n  }\n`;\n\nconst EditPost = styled(Link)`\n  display: inline-block;\n  margin: 5px 25px;\n  padding: 5px;\n  border: 2px solid #abacad;\n`;\n\nconst DeletePost = styled.div`\n  display: inline-block;\n  margin: 5px 25px;\n  padding: 5px;\n  border: 2px solid #abacad;\n  cursor: pointer;\n`;\n\nconst ReadMore = styled(Link)`\n  display: inline-block;\n  margin: 15px 25px;\n  text-align: left;\n  text-decoration: underline #aaacaf solid 3px;\n  transition: all ease-in-out 0.5s;\n  :hover {\n    color: #fff;\n    background: #aaacaf;\n  }\n`;\n\nconst Markdown = styled(ReactMarkdown)`\n  & > * {\n    overflow-wrap: break-word;\n    white-space: pre-wrap;\n    text-align: left;\n    ${MEDIA_QUERY_S} {\n      padding: 5px 25px;\n    }\n  }\n`;\n\nexport const Post = ({\n  post,\n  user,\n  userId,\n  excerpt,\n  archive,\n  handleDeletePost,\n}) => {\n  const createdAt = new Date(post.createdAt).toLocaleString();\n  return (\n    <PostWrapper>\n      <PostCreatedAt>{createdAt.split(\",\")[0]}</PostCreatedAt>\n      {excerpt || archive ? (\n        <Link to={`/post/${post.id}`}>\n          <PostTitle>{post.title}</PostTitle>\n        </Link>\n      ) : (\n        <PostTitle $singlePost={true}>{post.title}</PostTitle>\n      )}\n      {userId === post.userId && (\n        <EditPost to={`/edit-post/${post.id}`}>Edit</EditPost>\n      )}\n      {userId === post.userId && (\n        <DeletePost\n          onClick={() => {\n            if (window.confirm(\"Delete this post?\")) {\n              handleDeletePost(post.id);\n            }\n          }}\n        >\n          Delete\n        </DeletePost>\n      )}\n      {!archive && (\n        <Markdown renderers={{ code: CodeBlock }}>\n          {excerpt && post.body.length > 99\n            ? `${post.body.substring(0, 200)}...`\n            : post.body}\n        </Markdown>\n      )}\n      {(excerpt && post.body.length > 99) && (\n        <ReadMore to={`/post/${post.id}`}>Read More...</ReadMore>\n      )}\n    </PostWrapper>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst LoadingText = styled.div`\n  color: #cdcecf;\n  font-size: 28px;\n`;\nconst LoadingDots = styled.div`\n  margin: auto;\n  margin-top: 30px;\n  position: relative;\n  width: 10px;\n  height: 10px;\n  border-radius: 5px;\n  background-color: #cdcecf;\n  color: #cdcecf;\n  animation: dotFlashing 1s infinite linear alternate;\n  animation-delay: 0.5s;\n  &::before,\n  &::after {\n    content: \"\";\n    display: inline-block;\n    position: absolute;\n    top: 0;\n  }\n  &::before {\n    left: -15px;\n    width: 10px;\n    height: 10px;\n    border-radius: 5px;\n    background-color: #cdcecf;\n    color: #cdcecf;\n    animation: dotFlashing 1s infinite linear alternate;\n    animation-delay: 0s;\n  }\n  &::after {\n    left: 15px;\n    width: 10px;\n    height: 10px;\n    border-radius: 5px;\n    background-color: #cdcecf;\n    color: #cdcecf;\n    animation: dotFlashing 1s infinite linear alternate;\n    animation-delay: 1s;\n  }\n\n  @keyframes dotFlashing {\n    0% {\n      background-color: #cdcecf;\n    }\n    50%,\n    100% {\n      background-color: #fdfeff;\n    }\n  }\n`;\n\nexport const Loading = () => {\n  return (\n    <>\n      <LoadingText>Loading</LoadingText>\n      <LoadingDots />\n    </>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst PaginationWrapper = styled.div`\n  margin: auto;\n  display: flex;\n  justify-content: center;\n  max-width: 80vw;\n`;\n\nconst PaginationItem = styled.div`\n  cursor: pointer;\n  padding: 5px;\n  ${(props) =>\n    props.$active &&\n    `\n      font-weight: bold;\n      background: #aaadaf;\n      color: #fff;\n    `}\n`;\n\nexport const Pagination = ({ currentPage, totalPosts, handlePagination }) => {\n  const totalPages = Math.ceil(totalPosts / 5);\n  let pagesArray = [];\n  for (let i = 0; i < totalPages; i++) {\n    pagesArray.push(i + 1);\n  }\n\n  return (\n    <PaginationWrapper>\n      {pagesArray.map((pageNumber) => {\n        return (\n          <PaginationItem\n            key={pageNumber}\n            onClick={() => handlePagination(pageNumber)}\n            $active={pageNumber === currentPage}\n          >\n            {pageNumber}\n          </PaginationItem>\n        );\n      })}\n    </PaginationWrapper>\n  );\n};\n","import React, { useLayoutEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchPosts, postsSelector } from \"../../slices/posts\";\n\nimport { Post } from \"../../components/Post\";\nimport { Loading } from \"../../components/Loading\";\nimport { Pagination } from \"../../components/Pagination\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { posts, totalPosts, currentPage, isLoading, hasErrors } = useSelector(\n    postsSelector\n  );\n\n  useLayoutEffect(() => {\n    dispatch(fetchPosts(1));\n  }, [dispatch]);\n\n  const handlePagination = (pageNumber) => {\n    dispatch(fetchPosts(pageNumber));\n  };\n\n  const renderPosts = () => {\n    if (isLoading) return <Loading />;\n    if (hasErrors) return <p>Sorry! Something went wrong...</p>;\n    return (\n      <>\n        {posts.map((post) => (\n          <Post key={post.id} post={post} excerpt />\n        ))}\n        <Pagination\n          currentPage={currentPage}\n          totalPosts={totalPosts}\n          handlePagination={handlePagination}\n        />\n      </>\n    );\n  };\n\n  return <>{renderPosts()}</>;\n};\n\nexport default Home;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getMeFromAPI, loginAPI } from \"../utils/WebAPI\";\nimport { setAuthToken } from \"../utils/utils\";\n\nexport const initialState = {\n  user: \"\",\n  userId: \"\",\n  isLoading: false,\n  hasErrors: false,\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    getMe: (state) => {\n      state.isLoading = true;\n    },\n    getMeSuccess: (state, action) => {\n      state.userId = action.payload.data.id;\n      state.user = action.payload.data.username;\n      state.isLoading = false;\n      state.hasErrors = false;\n    },\n    getMeFailure: (state) => {\n      state.isLoading = false;\n      state.hasErrors = true;\n    },\n    login: (state) => {\n      state.isLoading = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isLoading = false;\n      state.hasErrors = false;\n    },\n    loginFailure: (state) => {\n      state.isLoading = false;\n      state.hasErrors = true;\n    },\n  },\n});\n\nexport const {\n  getMe,\n  getMeSuccess,\n  getMeFailure,\n  login,\n  loginSuccess,\n  loginFailure,\n} = userSlice.actions;\nexport const userSelector = (state) => state.user;\nexport default userSlice.reducer;\n\nexport const loginRequest = (username, password) => {\n  return async (dispatch) => {\n    dispatch(login());\n\n    try {\n      const responseData = await loginAPI(username, password);\n      setAuthToken(responseData.token);\n      dispatch(loginSuccess(responseData));\n    } catch (error) {\n      dispatch(loginFailure());\n    }\n  };\n};\n\nexport const fetchMe = () => {\n  return async (dispatch) => {\n    dispatch(getMe());\n\n    try {\n      const responseData = await getMeFromAPI();\n\n      dispatch(getMeSuccess(responseData));\n    } catch (error) {\n      dispatch(getMeFailure());\n    }\n  };\n};\n","import React, { useLayoutEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchPosts, postsSelector } from \"../../slices/posts\";\nimport { userSelector } from \"../../slices/user\";\n\nimport { Post } from \"../../components/Post\";\nimport { Loading } from \"../../components/Loading\";\n\nconst Archive = () => {\n  const dispatch = useDispatch();\n  const { posts, isLoading, hasErrors } = useSelector(postsSelector);\n  const { userId } = useSelector(userSelector);\n\n  useLayoutEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const renderPosts = () => {\n    if (isLoading) return <Loading />;\n    if (hasErrors) return <p>Sorry! Something went wrong...</p>;\n    return (\n      <>\n        {posts.map((post) => (\n          <Post key={post.id} post={post} userId={userId} archive />\n        ))}\n      </>\n    );\n  };\n\n  return <>{renderPosts()}</>;\n};\n\nexport default Archive;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getSinglePostFromAPI } from \"../utils/WebAPI\";\n\nexport const initialState = {\n  post: {},\n  isLoading: false,\n  hasErrors: false,\n  errorMessage: null,\n};\n\nconst postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {\n    getPost: (state) => {\n      state.isLoading = true;\n    },\n    getPostSuccess: (state, action) => {\n      state.post = action.payload;\n      state.isLoading = false;\n      state.hasErrors = false;\n    },\n    getPostFailure: (state, action) => {\n      state.errorMessage = action.payload;\n      state.isLoading = false;\n      state.hasErrors = true;\n    },\n    clearPost: (state) => {\n      state.post = {};\n      state.isLoading = false;\n      state.hasErrors = false;\n    },\n  },\n});\n\nexport const {\n  getPost,\n  getPostSuccess,\n  getPostFailure,\n  clearPost,\n} = postSlice.actions;\nexport const postSelector = (state) => state.post;\nexport default postSlice.reducer;\n\nexport const fetchSinglePost = (id) => {\n  return async (dispatch) => {\n    dispatch(getPost());\n\n    try {\n      const responseData = await getSinglePostFromAPI(id);\n\n      dispatch(getPostSuccess(responseData));\n    } catch (error) {\n      const errorData = JSON.stringify(error);\n      dispatch(getPostFailure(errorData));\n    }\n  };\n};\n\nexport const clearSinglePost = () => {\n  return (dispatch) => {\n    dispatch(clearPost());\n  };\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { sendPostAPI, updatePostAPI, deletePostAPI } from \"../utils/WebAPI\";\n\nexport const initialState = {\n  postResponse: null,\n  isLoading: false,\n  hasErrors: false,\n};\n\nconst editorSlice = createSlice({\n  name: \"editor\",\n  initialState,\n  reducers: {\n    editOperation: (state) => {\n      state.isLoading = true;\n    },\n    editPostSuccess: (state, action) => {\n      state.postResponse = action.payload;\n      state.isLoading = false;\n      state.hasErrors = false;\n    },\n    editPostFailure: (state) => {\n      state.isLoading = false;\n      state.hasErrors = true;\n    },\n    deletePostSuccess: (state, action) => {\n      state.postResponse = action.payload;\n      state.isLoading = false;\n      state.hasErrors = false;\n    },\n    deletePostFailure: (state) => {\n      state.isLoading = false;\n      state.hasErrors = true;\n    },\n    clearPostResponse: (state, action) => {\n      state.postResponse = null;\n      state.isLoading = false;\n      state.hasErrors = false;\n    },\n  },\n});\n\nexport const {\n  editOperation,\n  editPostSuccess,\n  editPostFailure,\n  deletePostSuccess,\n  deletePostFailure,\n  clearPostResponse,\n} = editorSlice.actions;\nexport const editorSelector = (state) => state.editor;\nexport default editorSlice.reducer;\n\nexport const sendPostRequest = (title, body, id) => {\n  return async (dispatch) => {\n    dispatch(editOperation());\n\n    try {\n      let responseData = {};\n      if (id) {\n        responseData = await updatePostAPI(title, body, id);\n      } else {\n        responseData = await sendPostAPI(title, body);\n      }\n\n      dispatch(editPostSuccess(responseData));\n    } catch (error) {\n      dispatch(editPostFailure());\n    }\n  };\n};\n\nexport const deletePostRequest = (id) => {\n  return async (dispatch) => {\n    dispatch(editOperation());\n\n    try {\n      const responseData = await deletePostAPI(id);\n      dispatch(deletePostSuccess(responseData));\n    } catch (error) {\n      dispatch(deletePostFailure());\n    }\n  };\n};\n\nexport const clearPostResponseData = () => {\n  return (dispatch) => {\n    dispatch(clearPostResponse());\n  };\n};\n","import React, { useLayoutEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport { fetchSinglePost, postSelector } from \"../../slices/post\";\nimport { fetchMe, userSelector } from \"../../slices/user\";\nimport { deletePostRequest } from \"../../slices/editor\";\n\nimport { getAuthToken } from \"../../utils/utils\";\n\nimport { Loading } from \"../../components/Loading\";\nimport { Post } from \"../../components/Post\";\n\nconst SinglePost = () => {\n  const { id } = useParams();\n  const history = useHistory();\n  const token = getAuthToken();\n  const dispatch = useDispatch();\n  const { post, isLoading, hasErrors } = useSelector(postSelector);\n  const { user, userId } = useSelector(userSelector);\n\n  useLayoutEffect(() => {\n    dispatch(fetchSinglePost(id));\n    dispatch(fetchMe(token));\n  }, [dispatch, id, token, hasErrors]);\n\n  const handleDeletePost = async (id) => {\n    await dispatch(deletePostRequest(id));\n    history.push(\"/\");\n  };\n\n  const renderPost = () => {\n    if (isLoading) return <Loading />;\n    if (hasErrors) return <p>Sorry! Something went wrong...</p>;\n    if (!post) return history.push(\"/\");\n    return (\n      <Post\n        key={post.id}\n        post={post}\n        user={user}\n        userId={userId}\n        handleDeletePost={handleDeletePost}\n      />\n    );\n  };\n\n  return <>{renderPost()}</>;\n};\n\nexport default SinglePost;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { fetchMe, userSelector } from \"../slices/user\";\nimport {\n  sendPostRequest,\n  clearPostResponseData,\n  editorSelector,\n} from \"../slices/editor\";\n\nconst EditorTitle = styled.input`\n  font-size: 28px;\n  text-align: left;\n  margin: 15px;\n  padding: 15px 15px 0;\n  border: none;\n  border-bottom: 2px solid #cccdcf;\n  width: 80%;\n`;\n\nconst EditorBody = styled.textarea`\n  text-align: left;\n  margin: 15px;\n  padding: 10px;\n  width: 80%;\n  resize: none;\n  height: 500px;\n`;\n\nexport const Editor = ({ post }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { user } = useSelector(userSelector);\n  const { postResponse } = useSelector(editorSelector);\n\n  useEffect(() => {\n    dispatch(fetchMe());\n    console.log(postResponse);\n    if (postResponse && postResponse.id) {\n      history.push(`/post/${postResponse.id}`);\n    }\n    return () => {\n      dispatch(clearPostResponseData());\n    };\n  }, [dispatch, postResponse, history]);\n\n  let title = \"\";\n  let body = \"\";\n  if (typeof post !== \"undefined\") {\n    title = post.title;\n    body = post.body;\n  }\n\n  const [inputs, setInputs] = useState(() => ({\n    postTitle: title,\n    postBody: body,\n  }));\n  const { postTitle, postBody } = inputs;\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setInputs((inputs) => ({ ...inputs, [name]: value }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const { postTitle, postBody } = inputs;\n    let id = null;\n    if (typeof post !== \"undefined\") {\n      id = post.id;\n    }\n    await dispatch(sendPostRequest(postTitle, postBody, id));\n    console.log(postResponse);\n  };\n\n  if (!user) {\n    return <div>You are now allowed here!</div>;\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <EditorTitle\n        type=\"text\"\n        name=\"postTitle\"\n        value={postTitle}\n        placeholder=\"Title\"\n        onChange={handleChange}\n      />\n      <EditorBody\n        type=\"textarea\"\n        name=\"postBody\"\n        value={postBody}\n        onChange={handleChange}\n      />\n      <br />\n      <button>Submit</button>\n    </form>\n  );\n};\n\nexport default Editor;\n","import React from \"react\";\n\nimport { Editor } from \"../../components/Editor\";\n\nconst NewPost = () => <Editor />;\n\nexport default NewPost;\n","import React, { useLayoutEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport {\n  fetchSinglePost,\n  clearSinglePost,\n  postSelector,\n} from \"../../slices/post\";\n\nimport { Loading } from \"../../components/Loading\";\nimport { Editor } from \"../../components/Editor\";\n\nconst EditPost = () => {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const { post, isLoading, hasErrors } = useSelector(postSelector);\n  const history = useHistory();\n\n  useLayoutEffect(() => {\n    dispatch(fetchSinglePost(id));\n    return () => {\n      dispatch(clearSinglePost());\n    };\n  }, [dispatch, id, history]);\n\n  const renderEditor = () => {\n    if (isLoading) return <Loading />;\n    if (hasErrors) return <p>Something went wrong...</p>;\n    if (!post) return <Editor />;\n    return <Editor key={post.id} post={post} />;\n  };\n\n  return <>{renderEditor()}</>;\n};\n\nexport default EditPost;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst AboutSection = styled.section`\n  padding: 20px 70px;\n`;\n\nconst AboutTitle = styled.h1`\n  text-align: left;\n  font-size: 28px;\n`;\n\nconst AboutContent = styled.div`\n  text-align: left;\n`;\n\nexport default function About() {\n  return (\n    <AboutSection>\n      <AboutTitle>About</AboutTitle>\n      <AboutContent>JAS0N HUANG</AboutContent>\n    </AboutSection>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { fetchMe, loginRequest, userSelector } from \"../../slices/user\";\n\nexport const Login = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector(userSelector);\n  const [inputs, setInputs] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const { username, password } = inputs;\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(fetchMe());\n    if (user !== \"\") {\n      history.push(\"/\");\n    }\n  }, [dispatch, user, history]);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setInputs((inputs) => ({ ...inputs, [name]: value }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const { username, password } = inputs;\n    await dispatch(loginRequest(username, password));\n    dispatch(fetchMe());\n  };\n\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Username\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <button>Login</button>\n      </form>\n    </section>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\n\nimport { fetchMe, userSelector } from \"../slices/user\";\n\nimport { setAuthToken } from \"../utils/utils\";\n\nimport { MEDIA_QUERY_S } from \"./constants/Breakpoints\";\n\nconst HeaderWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  border-top: #aaadaf 8px solid;\n  box-shadow: 0px 10px 10px 10px #fff;\n  background: #fff;\n  z-index: 99;\n`;\n\nconst HeaderBody = styled.header`\n  margin: auto;\n  display: flex;\n  width: 100%;\n  max-width: 1080px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Icon = styled(Link)`\n  font-size: 32px;\n  font-weight: bold;\n  background: #aaadaf;\n  color: #fff;\n  padding: 15px 10px;\n  margin: 0px 10px;\n`;\n\nconst NavItem = styled(Link)`\n  transition: all ease-in-out 0.5s;\n  padding: 2px;\n  margin: 2px;\n  border: solid 1px #dedfff;\n  ${MEDIA_QUERY_S} {\n    border: none;\n    padding: 15px;\n    margin: auto 15px;\n  }\n  :hover {\n    color: #fff;\n    background: #aaadaf;\n  }\n  ${(props) =>\n    props.$active &&\n    `\n      font-weight: bold;\n      background: #aaadaf;\n      color: #fff;\n    `}\n`;\n\nconst NavItemHidden = styled(Link)`\n  color: #fff;\n  transition: all ease-in-out 0.5s;\n  padding: 2px;\n  margin: 2px;\n  ${MEDIA_QUERY_S} {\n    padding: 15px;\n    margin: auto 15px;\n  }\n\n  :hover {\n    background: #aaadaf;\n  }\n  ${(props) =>\n    props.$active &&\n    `\n      font-weight: bold;\n      background: #aaadaf;\n      color: #fff;\n    `}\n`;\n\nexport const Header = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const { user } = useSelector(userSelector);\n\n  useEffect(() => {\n    dispatch(fetchMe());\n  }, [dispatch, user]);\n\n  const handleLogout = () => {\n    setAuthToken(null);\n    dispatch(fetchMe());\n    history.go(0);\n  };\n\n  return (\n    <HeaderWrapper>\n      <HeaderBody>\n        <Icon to=\"/\">JH</Icon>\n        <nav>\n          {user && (\n            <NavItem to=\"/new-post\" $active={location.pathname === \"/new-post\"}>\n              New\n            </NavItem>\n          )}\n          <NavItem to=\"/archive\" $active={location.pathname === \"/archive\"}>\n            Archive\n          </NavItem>\n          <NavItem to=\"/about\" $active={location.pathname === \"/about\"}>\n            About\n          </NavItem>\n          {user && (\n            <NavItem to=\"/\" onClick={handleLogout}>\n              Logout\n            </NavItem>\n          )}\n          {!user && (\n            <NavItemHidden to=\"/login\" $active={location.pathname === \"/login\"}>\n              Login\n            </NavItemHidden>\n          )}\n        </nav>\n      </HeaderBody>\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FooterWrapper = styled.div`\n  height: 38px;\n  position: relative;\n  bottom: -76px;\n  width: 100%;\n  border-bottom: #aaadaf 8px solid;\n  box-shadow: 0px -10px 10px 10px #fff;\n  background: #fff;\n  z-index: 99;\n  line-height: 30px;\n`;\n\nconst FooterBody = styled.footer`\n  margin: auto;\n  padding: 0 10px;\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  max-width: 1080px;\n  align-items: left;\n  line-height: 30px;\n  align-items: center;\n`;\n\nconst InfoSection = styled.div`\n  display: flex;\n`;\n\nconst FooterText = styled.p`\n  line-height: 30px;\n  font-size: 16px;\n`;\n\nconst CCIcon = styled.img`\n  margin: auto 10px;\n  height: 20px;\n`;\n\nconst SocialSection = styled.div`\n  text-align: right;\n`;\n\nconst SocialIcon = styled.img`\n  display: inline-block;\n  height: 28px;\n  width: 28px;\n  margin: 0 15px;\n`;\n\nexport default function Footer() {\n  return (\n    <FooterWrapper>\n      <FooterBody>\n        <InfoSection>\n          <FooterText>JAS0N HUANG</FooterText>\n          <CCIcon src=\"https://upload.wikimedia.org/wikipedia/commons/a/a3/Cc.logo.circle.svg\" />\n          <FooterText>2021</FooterText>\n        </InfoSection>\n        <SocialSection>\n          <a href=\"https://github.com/jas0nhuang\">\n            <SocialIcon src=\"./img/github.svg\" />\n          </a>\n          <a href=\"mailto:jas0nhuang@tuta.io\">\n            <SocialIcon src=\"./img/email.svg\" />\n          </a>\n        </SocialSection>\n      </FooterBody>\n    </FooterWrapper>\n  );\n}\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Archive from \"./pages/Archive\";\nimport SinglePost from \"./pages/SinglePost\";\nimport NewPost from \"./pages/NewPost\";\nimport EditPost from \"./pages/EditPost\";\nimport About from \"./pages/About\";\nimport Login from \"./pages/Login\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nconst SiteRouter = () => {\n  return (\n    <Router>\n      <Header />\n      <main>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/post/:id\">\n            <SinglePost />\n          </Route>\n          <Route exact path=\"/new-post\">\n            <NewPost />\n          </Route>\n          <Route exact path=\"/edit-post/:id\">\n            <EditPost />\n          </Route>\n          <Route exact path=\"/archive\">\n            <Archive />\n          </Route>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Redirect to=\"/\" />\n        </Switch>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default SiteRouter;\n","import React from \"react\";\n\nimport GlobalStyle from \"./components/constants/GlobalStyle\";\nimport SiteRouter from \"./SiteRouter\";\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <SiteRouter />\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\n\nimport postsReducer from \"./posts\";\nimport postReducer from \"./post\";\nimport userReducer from \"./user\";\nimport editorReducer from \"./editor\";\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  post: postReducer,\n  user: userReducer,\n  editor: editorReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n\nimport App from \"./App\";\nimport rootReducer from \"./slices\";\n\nconst store = configureStore({ reducer: rootReducer });\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}